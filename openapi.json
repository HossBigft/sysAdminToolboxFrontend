{
  "openapi": "3.1.0",
  "info": {
    "title": "SysAdminToolbox",
    "version": "0.1.0"
  },
  "paths": {
    "/api/v1/dns/resolve/internal/a/": {
      "get": {
        "tags": [
          "dns"
        ],
        "summary": "Get A Record",
        "operationId": "get_a_record",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 3,
              "maxLength": 253,
              "pattern": "^([a-zA-Z0-9]([a-zA-Z0-9\\-]{0,61}[a-zA-Z0-9])?\\.)+[a-zA-Z]{2,6}\\.?$",
              "title": "Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DomainARecordResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/dns/resolve/ptr/": {
      "get": {
        "tags": [
          "dns"
        ],
        "summary": "Get Ptr Record",
        "operationId": "get_ptr_record",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "ip",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ipvanyaddress",
              "title": "Ip"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/dns/internal/zonemaster/": {
      "get": {
        "tags": [
          "dns"
        ],
        "summary": "Get Zone Master From Dns Servers",
        "operationId": "get_zone_master_from_dns_servers",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 3,
              "maxLength": 253,
              "pattern": "^([a-zA-Z0-9]([a-zA-Z0-9\\-]{0,61}[a-zA-Z0-9])?\\.)+[a-zA-Z]{2,9}$",
              "title": "Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "dns"
        ],
        "summary": "Delete Zone File For Domain",
        "operationId": "delete_zone_file_for_domain",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 3,
              "maxLength": 253,
              "pattern": "^([a-zA-Z0-9]([a-zA-Z0-9\\-]{0,61}[a-zA-Z0-9])?\\.)+[a-zA-Z]{2,6}\\.?$",
              "title": "Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/dns/resolve/internal/mx/": {
      "get": {
        "tags": [
          "dns"
        ],
        "summary": "Get Mx Record",
        "operationId": "get_mx_record",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 3,
              "maxLength": 253,
              "pattern": "^([a-zA-Z0-9]([a-zA-Z0-9\\-]{0,61}[a-zA-Z0-9])?\\.)+[a-zA-Z]{2,6}\\.?$",
              "title": "Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DomainMxRecordResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/dns/resolve/public/ns/propagation": {
      "get": {
        "tags": [
          "dns"
        ],
        "summary": "Get Ns Records From Global Dns",
        "operationId": "get_ns_records_from_global_dns",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 3,
              "maxLength": 253,
              "pattern": "^([a-zA-Z0-9]([a-zA-Z0-9\\-]{0,61}[a-zA-Z0-9])?\\.)+[a-zA-Z]{2,6}\\.?$",
              "title": "Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/dns/internal/hostbydomain": {
      "get": {
        "tags": [
          "dns"
        ],
        "summary": "Resolve Host By Domain",
        "operationId": "resolve_host_by_domain",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 3,
              "maxLength": 253,
              "pattern": "^([a-zA-Z0-9]([a-zA-Z0-9\\-]{0,61}[a-zA-Z0-9])?\\.)+[a-zA-Z]{2,6}\\.?$",
              "title": "Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HostIpData"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/dns/internal/hostbyip": {
      "get": {
        "tags": [
          "dns"
        ],
        "summary": "Resolve Host By Ip",
        "operationId": "resolve_host_by_ip",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "ip",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ipvanyaddress",
              "title": "Ip"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HostIpData"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/dns/resolve/google/a/": {
      "get": {
        "tags": [
          "dns"
        ],
        "summary": "Get A Record Google",
        "operationId": "get_a_record_google",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 3,
              "maxLength": 253,
              "pattern": "^([a-zA-Z0-9]([a-zA-Z0-9\\-]{0,61}[a-zA-Z0-9])?\\.)+[a-zA-Z]{2,6}\\.?$",
              "title": "Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DomainARecordResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/dns/resolve/google/mx/": {
      "get": {
        "tags": [
          "dns"
        ],
        "summary": "Get Mx Record Google",
        "operationId": "get_mx_record_google",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 3,
              "maxLength": 253,
              "pattern": "^([a-zA-Z0-9]([a-zA-Z0-9\\-]{0,61}[a-zA-Z0-9])?\\.)+[a-zA-Z]{2,6}\\.?$",
              "title": "Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DomainMxRecordResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/dns/resolve/authoritative/ns/": {
      "get": {
        "tags": [
          "dns"
        ],
        "summary": "Get Authoritative Ns Records",
        "operationId": "get_authoritative_ns_records",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 3,
              "maxLength": 253,
              "pattern": "^([a-zA-Z0-9]([a-zA-Z0-9\\-]{0,61}[a-zA-Z0-9])?\\.)+[a-zA-Z]{2,6}\\.?$",
              "title": "Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DomainNsRecordResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Read Users",
        "description": "Retrieve users.",
        "operationId": "read_users",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsersPublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Create User",
        "description": "Create new user.",
        "operationId": "create_user",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/me": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Read User Me",
        "description": "Get current user.",
        "operationId": "read_user_me",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPublic"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "users"
        ],
        "summary": "Delete User Me",
        "description": "Delete own user.",
        "operationId": "delete_user_me",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "patch": {
        "tags": [
          "users"
        ],
        "summary": "Update User Me",
        "description": "Update own user.",
        "operationId": "update_user_me",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdateMe"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/users/me/password": {
      "patch": {
        "tags": [
          "users"
        ],
        "summary": "Update Password Me",
        "description": "Update own password.",
        "operationId": "update_password_me",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePassword"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/users/signup": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Register User",
        "description": "Create new user without the need to be logged in.",
        "operationId": "register_user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRegister"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/{user_id}": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Read User By Id",
        "description": "Get a specific user by id.",
        "operationId": "read_user_by_id",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "users"
        ],
        "summary": "Update User",
        "description": "Update a user.",
        "operationId": "update_user",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "users"
        ],
        "summary": "Delete User",
        "description": "Delete a user.",
        "operationId": "delete_user",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/me/history": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Get Own Actions",
        "operationId": "get_own_actions",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserLogSearchRequestSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedUserLogListSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/users/{user_id}/history": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get User Actions",
        "operationId": "get_user_actions",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/superuser/me": {
      "patch": {
        "tags": [
          "users"
        ],
        "summary": "Update Superuser Me",
        "description": "Update own superuser.",
        "operationId": "update_superuser_me",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SuperUserUpdateMe"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/plesk/get/subscription/": {
      "get": {
        "tags": [
          "plesk"
        ],
        "summary": "Find Plesk Subscription By Domain",
        "operationId": "find_plesk_subscription_by_domain",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 3,
              "maxLength": 253,
              "pattern": "^([a-zA-Z0-9]([a-zA-Z0-9\\-]{0,61}[a-zA-Z0-9])?\\.)+[a-zA-Z]{2,9}$",
              "title": "Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionListResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/plesk/subscription/login-link": {
      "post": {
        "tags": [
          "plesk"
        ],
        "summary": "Get Subscription Login Link",
        "operationId": "get_subscription_login_link",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionLoginLinkInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/plesk/zonemaster/set": {
      "post": {
        "tags": [
          "plesk"
        ],
        "summary": "Set Zonemaster",
        "operationId": "set_zonemaster",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetZonemasterInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/plesk/subscription/testmail": {
      "get": {
        "tags": [
          "plesk"
        ],
        "summary": "Create Testmail For Domain",
        "operationId": "create_testmail_for_domain",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "maildomain",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 3,
              "maxLength": 253,
              "pattern": "^([a-zA-Z0-9]([a-zA-Z0-9\\-]{0,61}[a-zA-Z0-9])?\\.)+[a-zA-Z]{2,6}\\.?$",
              "title": "Maildomain"
            }
          },
          {
            "name": "server",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 3,
              "maxLength": 253,
              "pattern": "^([a-zA-Z0-9]([a-zA-Z0-9\\-]{0,61}[a-zA-Z0-9])?\\.)+[a-zA-Z]{2,6}\\.?$",
              "title": "Server"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestMailCredentials"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/plesk/publickey": {
      "get": {
        "tags": [
          "plesk"
        ],
        "summary": "Share Public Key",
        "operationId": "share_public_key",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/core_utils/health-check/": {
      "get": {
        "tags": [
          "core_utils"
        ],
        "summary": "Health Check",
        "operationId": "health_check",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "title": "Response Core Utils-Health Check"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/password-recovery/{email}": {
      "post": {
        "tags": [
          "password_reset"
        ],
        "summary": "Recover Password",
        "description": "Password Recovery",
        "operationId": "recover_password",
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Email"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/reset-password/": {
      "post": {
        "tags": [
          "password_reset"
        ],
        "summary": "Reset Password",
        "description": "Reset password",
        "operationId": "reset_password",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewPassword"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/password-recovery-html-content/{email}": {
      "post": {
        "tags": [
          "password_reset"
        ],
        "summary": "Recover Password Html Content",
        "description": "HTML Content for Password Recovery",
        "operationId": "recover_password_html_content",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Email"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/login/access-token": {
      "post": {
        "tags": [
          "login"
        ],
        "summary": "Login Access Token",
        "description": "OAuth2 compatible token login, get an access token for future requests",
        "operationId": "login_access_token",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_login-login_access_token"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Token"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/login/test-token": {
      "post": {
        "tags": [
          "login"
        ],
        "summary": "Test Token",
        "description": "Test access token",
        "operationId": "test_token",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPublic"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "Body_login-login_access_token": {
        "properties": {
          "grant_type": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "^password$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Grant Type"
          },
          "username": {
            "type": "string",
            "title": "Username"
          },
          "password": {
            "type": "string",
            "title": "Password"
          },
          "scope": {
            "type": "string",
            "title": "Scope",
            "default": ""
          },
          "client_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client Id"
          },
          "client_secret": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client Secret"
          }
        },
        "type": "object",
        "required": [
          "username",
          "password"
        ],
        "title": "Body_login-login_access_token"
      },
      "DeleteZonemasterLogSchema": {
        "properties": {
          "ip": {
            "$ref": "#/components/schemas/IPv4Address"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp"
          },
          "domain": {
            "$ref": "#/components/schemas/DomainName"
          },
          "current_zone_master": {
            "type": "string",
            "title": "Current Zone Master"
          },
          "log_type": {
            "type": "string",
            "const": "DELETE_ZONE_MASTER",
            "title": "Log Type"
          }
        },
        "type": "object",
        "required": [
          "ip",
          "timestamp",
          "domain",
          "current_zone_master",
          "log_type"
        ],
        "title": "DeleteZonemasterLogSchema"
      },
      "DomainARecordResponse": {
        "properties": {
          "domain": {
            "$ref": "#/components/schemas/DomainName"
          },
          "records": {
            "items": {
              "$ref": "#/components/schemas/IPv4Address"
            },
            "type": "array",
            "title": "Records"
          }
        },
        "type": "object",
        "required": [
          "domain",
          "records"
        ],
        "title": "DomainARecordResponse"
      },
      "DomainMxRecordResponse": {
        "properties": {
          "domain": {
            "$ref": "#/components/schemas/DomainName"
          },
          "records": {
            "items": {
              "$ref": "#/components/schemas/DomainName"
            },
            "type": "array",
            "title": "Records"
          }
        },
        "type": "object",
        "required": [
          "domain",
          "records"
        ],
        "title": "DomainMxRecordResponse"
      },
      "DomainName": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 253,
            "minLength": 3,
            "pattern": "^([a-zA-Z0-9]([a-zA-Z0-9\\-]{0,61}[a-zA-Z0-9])?\\.)+[a-zA-Z]{2,6}\\.?$",
            "title": "Name"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "DomainName",
        "examples": [
          "example.com."
        ]
      },
      "DomainNsRecordResponse": {
        "properties": {
          "domain": {
            "$ref": "#/components/schemas/DomainName"
          },
          "records": {
            "items": {
              "$ref": "#/components/schemas/DomainName"
            },
            "type": "array",
            "title": "Records"
          }
        },
        "type": "object",
        "required": [
          "domain",
          "records"
        ],
        "title": "DomainNsRecordResponse"
      },
      "GetPleskLoginLinkLogSchema": {
        "properties": {
          "ip": {
            "$ref": "#/components/schemas/IPv4Address"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp"
          },
          "plesk_server": {
            "$ref": "#/components/schemas/PleskServerDomain"
          },
          "subscription_id": {
            "type": "integer",
            "title": "Subscription Id"
          },
          "log_type": {
            "type": "string",
            "const": "GET_SUBSCRIPTION_LOGIN_LINK",
            "title": "Log Type"
          },
          "ssh_username": {
            "$ref": "#/components/schemas/LinuxUsername"
          }
        },
        "type": "object",
        "required": [
          "ip",
          "timestamp",
          "plesk_server",
          "subscription_id",
          "log_type",
          "ssh_username"
        ],
        "title": "GetPleskLoginLinkLogSchema"
      },
      "GetZoneMasterLogSchema": {
        "properties": {
          "ip": {
            "$ref": "#/components/schemas/IPv4Address"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp"
          },
          "domain": {
            "$ref": "#/components/schemas/DomainName"
          },
          "log_type": {
            "type": "string",
            "const": "GET_ZONE_MASTER",
            "title": "Log Type"
          }
        },
        "type": "object",
        "required": [
          "ip",
          "timestamp",
          "domain",
          "log_type"
        ],
        "title": "GetZoneMasterLogSchema"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "HostIpData": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "ips": {
            "items": {
              "$ref": "#/components/schemas/IPv4Address"
            },
            "type": "array",
            "title": "Ips"
          }
        },
        "type": "object",
        "required": [
          "name",
          "ips"
        ],
        "title": "HostIpData"
      },
      "IPv4Address": {
        "properties": {
          "ip": {
            "type": "string",
            "format": "ipvanyaddress",
            "title": "Ip"
          }
        },
        "type": "object",
        "required": [
          "ip"
        ],
        "title": "IPv4Address",
        "examples": [
          [
            "174.64.7.4"
          ]
        ]
      },
      "LinuxUsername": {
        "type": "string",
        "maxLength": 32,
        "minLength": 3,
        "pattern": "^[a-z_]([a-z0-9_-]{0,31}|[a-z0-9_-]{0,30}\\$)$",
        "title": "LinuxUsername"
      },
      "Message": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Message"
          }
        },
        "type": "object",
        "required": [
          "message"
        ],
        "title": "Message"
      },
      "NewPassword": {
        "properties": {
          "token": {
            "type": "string",
            "title": "Token"
          },
          "new_password": {
            "type": "string",
            "maxLength": 40,
            "minLength": 8,
            "title": "New Password"
          }
        },
        "type": "object",
        "required": [
          "token",
          "new_password"
        ],
        "title": "NewPassword"
      },
      "PaginatedUserLogListSchema": {
        "properties": {
          "total_count": {
            "type": "integer",
            "title": "Total Count"
          },
          "page": {
            "type": "integer",
            "title": "Page"
          },
          "page_size": {
            "type": "integer",
            "maximum": 100,
            "minimum": 1,
            "title": "Page Size",
            "default": 10
          },
          "total_pages": {
            "type": "integer",
            "title": "Total Pages"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/UserLogPublic"
            },
            "type": "array",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "total_count",
          "page",
          "total_pages",
          "data"
        ],
        "title": "PaginatedUserLogListSchema"
      },
      "PleskServerDomain": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 253,
            "minLength": 3,
            "pattern": "^([a-zA-Z0-9]([a-zA-Z0-9\\-]{0,61}[a-zA-Z0-9])?\\.)+[a-zA-Z]{2,6}\\.?$",
            "title": "Name"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "PleskServerDomain",
        "examples": [
          "plesk.example.com"
        ]
      },
      "SetZoneMasterLogSchema": {
        "properties": {
          "ip": {
            "$ref": "#/components/schemas/IPv4Address"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp"
          },
          "domain": {
            "$ref": "#/components/schemas/DomainName"
          },
          "target_zone_master": {
            "$ref": "#/components/schemas/PleskServerDomain"
          },
          "current_zone_master": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PleskServerDomain"
              },
              {
                "type": "null"
              }
            ]
          },
          "log_type": {
            "type": "string",
            "const": "SET_ZONE_MASTER",
            "title": "Log Type"
          }
        },
        "type": "object",
        "required": [
          "ip",
          "timestamp",
          "domain",
          "target_zone_master",
          "current_zone_master",
          "log_type"
        ],
        "title": "SetZoneMasterLogSchema"
      },
      "SetZonemasterInput": {
        "properties": {
          "target_plesk_server": {
            "type": "string",
            "maxLength": 253,
            "minLength": 3,
            "pattern": "^([a-zA-Z0-9]([a-zA-Z0-9\\-]{0,61}[a-zA-Z0-9])?\\.)+[a-zA-Z]{2,6}\\.?$",
            "title": "Target Plesk Server"
          },
          "domain": {
            "type": "string",
            "maxLength": 253,
            "minLength": 3,
            "pattern": "^([a-zA-Z0-9]([a-zA-Z0-9\\-]{0,61}[a-zA-Z0-9])?\\.)+[a-zA-Z]{2,9}$",
            "title": "Domain"
          }
        },
        "type": "object",
        "required": [
          "target_plesk_server",
          "domain"
        ],
        "title": "SetZonemasterInput",
        "examples": [
          {
            "domain": "domain.kz",
            "target_plesk_server": "plesk.example.com"
          }
        ]
      },
      "SubscriptionDetailsModel": {
        "properties": {
          "host": {
            "$ref": "#/components/schemas/HostIpData"
          },
          "id": {
            "type": "string",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "username": {
            "type": "string",
            "title": "Username"
          },
          "userlogin": {
            "type": "string",
            "title": "Userlogin"
          },
          "domains": {
            "items": {
              "$ref": "#/components/schemas/SubscriptionName"
            },
            "type": "array",
            "title": "Domains"
          },
          "domain_states": {
            "items": {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            },
            "type": "array",
            "title": "Domain States"
          },
          "is_space_overused": {
            "type": "boolean",
            "title": "Is Space Overused"
          },
          "subscription_size_mb": {
            "type": "integer",
            "title": "Subscription Size Mb"
          },
          "subscription_status": {
            "type": "string",
            "title": "Subscription Status"
          }
        },
        "type": "object",
        "required": [
          "host",
          "id",
          "name",
          "username",
          "userlogin",
          "domains",
          "domain_states",
          "is_space_overused",
          "subscription_size_mb",
          "subscription_status"
        ],
        "title": "SubscriptionDetailsModel"
      },
      "SubscriptionListResponseModel": {
        "items": {
          "$ref": "#/components/schemas/SubscriptionDetailsModel"
        },
        "type": "array",
        "title": "SubscriptionListResponseModel"
      },
      "SubscriptionLoginLinkInput": {
        "properties": {
          "host": {
            "type": "string",
            "maxLength": 253,
            "minLength": 3,
            "pattern": "^([a-zA-Z0-9]([a-zA-Z0-9\\-]{0,61}[a-zA-Z0-9])?\\.)+[a-zA-Z]{2,6}\\.?$",
            "title": "Host"
          },
          "subscription_id": {
            "type": "integer",
            "title": "Subscription Id"
          }
        },
        "type": "object",
        "required": [
          "host",
          "subscription_id"
        ],
        "title": "SubscriptionLoginLinkInput",
        "examples": [
          {
            "host": "plesk.example.com",
            "subscription_id": 1124
          }
        ]
      },
      "SubscriptionName": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 253,
            "minLength": 3,
            "pattern": "^([a-zA-Z0-9]([a-zA-Z0-9\\-]{0,61}[a-zA-Z0-9])?\\.)+[a-zA-Z]{2,9}$",
            "title": "Name"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "SubscriptionName",
        "examples": [
          "v12312.webspace"
        ]
      },
      "SuperUserUpdateMe": {
        "properties": {
          "full_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Full Name"
          },
          "email": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255,
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "ssh_username": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 33
              },
              {
                "type": "null"
              }
            ],
            "title": "Ssh Username"
          }
        },
        "type": "object",
        "title": "SuperUserUpdateMe"
      },
      "TestMailCredentials": {
        "properties": {
          "login_link": {
            "type": "string",
            "pattern": "^https:\\/\\/webmail\\.(?:[a-zA-Z0-9-]+\\.)+[a-zA-Z]{2,6}\\/roundcube\\/index\\.php\\?_user=[a-zA-Z0-9._%+-]+%40(?:[a-zA-Z0-9-]+\\.)+[a-zA-Z]{2,6}$",
            "title": "Login Link"
          },
          "password": {
            "type": "string",
            "maxLength": 255,
            "minLength": 5,
            "pattern": "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[A-Za-z\\d!\"\\#\\$%\\&'\\(\\)\\*\\+,\\-\\./:;<=>\\?@\\[\\\\\\]\\^_`\\{\\|\\}\\~]*$",
            "title": "Password"
          },
          "email": {
            "type": "string",
            "title": "Email"
          }
        },
        "type": "object",
        "required": [
          "login_link",
          "password",
          "email"
        ],
        "title": "TestMailCredentials"
      },
      "Token": {
        "properties": {
          "access_token": {
            "type": "string",
            "title": "Access Token"
          },
          "token_type": {
            "type": "string",
            "title": "Token Type",
            "default": "bearer"
          }
        },
        "type": "object",
        "required": [
          "access_token"
        ],
        "title": "Token"
      },
      "UpdatePassword": {
        "properties": {
          "current_password": {
            "type": "string",
            "maxLength": 40,
            "minLength": 8,
            "title": "Current Password"
          },
          "new_password": {
            "type": "string",
            "maxLength": 40,
            "minLength": 8,
            "title": "New Password"
          }
        },
        "type": "object",
        "required": [
          "current_password",
          "new_password"
        ],
        "title": "UpdatePassword"
      },
      "UserActionType": {
        "type": "string",
        "enum": [
          "GET_ZONE_MASTER",
          "DELETE_ZONE_MASTER",
          "SET_ZONE_MASTER",
          "GET_SUBSCRIPTION_LOGIN_LINK",
          "PLESK_MAIL_GET_TEST_MAIL"
        ],
        "title": "UserActionType"
      },
      "UserActivityLogFilterSchema": {
        "properties": {
          "ip": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/IPv4Address"
              },
              {
                "type": "null"
              }
            ]
          },
          "timestamp": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Timestamp"
          },
          "log_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UserActionType"
              },
              {
                "type": "null"
              }
            ]
          },
          "domain": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/DomainName"
              },
              {
                "type": "null"
              }
            ]
          },
          "plesk_server": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PleskServerDomain"
              },
              {
                "type": "null"
              }
            ]
          },
          "subscription_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Subscription Id"
          },
          "ssh_username": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/LinuxUsername"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "title": "UserActivityLogFilterSchema"
      },
      "UserCreate": {
        "properties": {
          "email": {
            "type": "string",
            "maxLength": 255,
            "format": "email",
            "title": "Email"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "default": true
          },
          "full_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Full Name"
          },
          "role": {
            "$ref": "#/components/schemas/UserRoles",
            "default": "user"
          },
          "ssh_username": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 32
              },
              {
                "type": "null"
              }
            ],
            "title": "Ssh Username"
          },
          "password": {
            "type": "string",
            "maxLength": 40,
            "minLength": 8,
            "title": "Password"
          }
        },
        "type": "object",
        "required": [
          "email",
          "password"
        ],
        "title": "UserCreate"
      },
      "UserLogPublic": {
        "properties": {
          "full_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Full Name"
          },
          "role": {
            "$ref": "#/components/schemas/UserRoles",
            "default": "user"
          },
          "ssh_username": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 32
              },
              {
                "type": "null"
              }
            ],
            "title": "Ssh Username"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "details": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DeleteZonemasterLogSchema"
              },
              {
                "$ref": "#/components/schemas/SetZoneMasterLogSchema"
              },
              {
                "$ref": "#/components/schemas/GetZoneMasterLogSchema"
              },
              {
                "$ref": "#/components/schemas/GetPleskLoginLinkLogSchema"
              }
            ],
            "title": "Details",
            "discriminator": {
              "propertyName": "log_type",
              "mapping": {
                "DELETE_ZONE_MASTER": "#/components/schemas/DeleteZonemasterLogSchema",
                "GET_SUBSCRIPTION_LOGIN_LINK": "#/components/schemas/GetPleskLoginLinkLogSchema",
                "GET_ZONE_MASTER": "#/components/schemas/GetZoneMasterLogSchema",
                "SET_ZONE_MASTER": "#/components/schemas/SetZoneMasterLogSchema"
              }
            }
          }
        },
        "type": "object",
        "required": [
          "id",
          "details"
        ],
        "title": "UserLogPublic"
      },
      "UserLogSearchRequestSchema": {
        "properties": {
          "page": {
            "type": "integer",
            "title": "Page",
            "default": 1
          },
          "page_size": {
            "type": "integer",
            "maximum": 100,
            "minimum": 1,
            "title": "Page Size",
            "default": 10
          },
          "filters": {
            "$ref": "#/components/schemas/UserActivityLogFilterSchema"
          }
        },
        "type": "object",
        "required": [
          "filters"
        ],
        "title": "UserLogSearchRequestSchema"
      },
      "UserPublic": {
        "properties": {
          "email": {
            "type": "string",
            "maxLength": 255,
            "format": "email",
            "title": "Email"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "default": true
          },
          "full_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Full Name"
          },
          "role": {
            "$ref": "#/components/schemas/UserRoles",
            "default": "user"
          },
          "ssh_username": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 32
              },
              {
                "type": "null"
              }
            ],
            "title": "Ssh Username"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          }
        },
        "type": "object",
        "required": [
          "email",
          "id"
        ],
        "title": "UserPublic"
      },
      "UserRegister": {
        "properties": {
          "email": {
            "type": "string",
            "maxLength": 255,
            "format": "email",
            "title": "Email"
          },
          "password": {
            "type": "string",
            "maxLength": 40,
            "minLength": 8,
            "title": "Password"
          },
          "full_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Full Name"
          }
        },
        "type": "object",
        "required": [
          "email",
          "password"
        ],
        "title": "UserRegister"
      },
      "UserRoles": {
        "type": "string",
        "enum": [
          "superuser",
          "admin",
          "user"
        ],
        "title": "UserRoles"
      },
      "UserUpdate": {
        "properties": {
          "email": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255,
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "default": true
          },
          "full_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Full Name"
          },
          "role": {
            "$ref": "#/components/schemas/UserRoles",
            "default": "user"
          },
          "ssh_username": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 32
              },
              {
                "type": "null"
              }
            ],
            "title": "Ssh Username"
          },
          "password": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 40,
                "minLength": 8
              },
              {
                "type": "null"
              }
            ],
            "title": "Password"
          }
        },
        "type": "object",
        "title": "UserUpdate"
      },
      "UserUpdateMe": {
        "properties": {
          "full_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Full Name"
          },
          "email": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255,
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          }
        },
        "type": "object",
        "title": "UserUpdateMe"
      },
      "UsersPublic": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/UserPublic"
            },
            "type": "array",
            "title": "Data"
          },
          "count": {
            "type": "integer",
            "title": "Count"
          }
        },
        "type": "object",
        "required": [
          "data",
          "count"
        ],
        "title": "UsersPublic"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    },
    "securitySchemes": {
      "OAuth2PasswordBearer": {
        "type": "oauth2",
        "flows": {
          "password": {
            "scopes": {},
            "tokenUrl": "/api/v1/login/access-token"
          }
        }
      }
    }
  }
}